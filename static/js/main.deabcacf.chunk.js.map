{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","App","props","sendPushNotification","pushNotifToken","a","fetch","mode","method","headers","host","Accept","body","JSON","stringify","to","sound","title","alert","state","email","link","caption","e","preventDefault","collection","doc","this","user","update","vidURL","get","then","setState","data","console","log","target","value","className","onSubmit","addVideo","for","onChange","onEmailChange","type","placeholder","onLinkChange","onCaptionChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAcAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,0CACZC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAKjB,IAEeC,EAFJT,IAASU,Y,OCXCC,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkCJC,qBAnCe,uCAmCS,WAAOC,GAAP,SAAAC,EAAA,+EAGdC,MAAM,uCAAuC,CACjDC,KAAM,UACNC,OAAQ,OACRC,QAAS,CACPC,KAAM,WACNC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACjBC,GAAIX,EACJY,MAAO,UACPC,MAAO,OACPL,KAAM,2BAfQ,sDAoBpBM,MAAM,EAAD,IApBe,OAuBtBA,MAAM,QAvBgB,wDAnCT,sDAGjB,EAAKC,MAAQ,CACTC,MAAO,GACPhB,eAAgB,GAChBiB,KAAM,GACNC,QAAS,IAPI,E,mFAWjB,WAAeC,GAAf,sBAAAlB,EAAA,6DACEkB,EAAEC,iBADJ,kBAGyBzB,EAAG0B,WAAW,SAASC,IAAIC,KAAKR,MAAMC,OAH/D,cAGYQ,EAHZ,gBAIYA,EAAKC,OAAO,CAChBC,OAAQH,KAAKR,MAAME,KACnBC,QAASK,KAAKR,MAAMG,UAN5B,uBAUYM,EAAKG,MAAMC,MAAK,SAACN,GACrB,EAAKO,SAAS,CAAE7B,eAAgBsB,EAAIQ,OAAO9B,iBAC3C+B,QAAQC,IAAI,EAAKjB,MAAMf,mBAZ/B,OAgBMuB,KAAKxB,qBAAqBwB,KAAKR,MAAMf,gBAhB3C,kDAoBMc,MAAM,EAAD,IApBX,0D,kFAkDA,SAAcK,GACZI,KAAKM,SAAS,CACZb,MAAOG,EAAEc,OAAOC,U,0BAGpB,SAAaf,GACXI,KAAKM,SAAS,CACZZ,KAAME,EAAEc,OAAOC,U,6BAGnB,SAAgBf,GACdI,KAAKM,SAAS,CACZX,QAASC,EAAEc,OAAOC,U,oBAKxB,WAAU,IAAD,OAEP,OAEE,qBAAKC,UAAU,iBAAf,SACI,uBAAMC,SAAU,SAACjB,GAAD,OAAO,EAAKkB,SAASlB,IAArC,UACE,sBAAKgB,UAAU,aAAf,UACE,uBAAOG,IAAI,qBAAX,mBACA,uBAAOC,SAAU,SAACpB,GAAD,OAAO,EAAKqB,cAAcrB,IAAIe,MAAOX,KAAKR,MAAMC,MAAOyB,KAAK,QAAQN,UAAU,oBAAoBO,YAAY,mBAEjI,sBAAKP,UAAU,aAAf,UACE,uBAAOG,IAAI,wBAAX,wBACA,uBAAOC,SAAU,SAACpB,GAAD,OAAO,EAAKwB,aAAaxB,IAAIe,MAAOX,KAAKR,MAAME,KAAMwB,KAAK,OAAON,UAAU,oBAAoBO,YAAY,uBAE9H,sBAAKP,UAAU,aAAf,UACE,uBAAOG,IAAI,wBAAX,qBACA,uBAAOC,SAAU,SAACpB,GAAD,OAAO,EAAKyB,gBAAgBzB,IAAIe,MAAOX,KAAKR,MAAMG,QAASuB,KAAK,OAAON,UAAU,eAAeO,YAAY,qBAG/H,wBAAQD,KAAK,SAASN,UAAU,uBAAhC,6B,GAnGqBU,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.deabcacf.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCnYXhrTWhg-nv1kGY619cH6fTojk0kOvI\",\r\n  authDomain: \"push-notification-7c3e3.firebaseapp.com\",\r\n  projectId: \"push-notification-7c3e3\",\r\n  storageBucket: \"push-notification-7c3e3.appspot.com\",\r\n  messagingSenderId: \"1003647006216\",\r\n  appId: \"1:1003647006216:web:6c4af366a29f026ea383bd\",\r\n  measurementId: \"G-6BJDYFEF6Z\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db;\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport db from './firebase';\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        email: '',\n        pushNotifToken: '',\n        link: '', \n        caption: ''\n    };\n  }\n\n    async addVideo(e) {\n      e.preventDefault();\n        try{\n          const user = await db.collection('users').doc(this.state.email); //get user from database\n          await user.update({ //update the video url and captin in the database\n            vidURL: this.state.link,\n            caption: this.state.caption\n          })\n          \n          //get the user's push notification token\n          await user.get().then((doc) => { \n            this.setState({ pushNotifToken: doc.data().pushNotifToken });\n            console.log(this.state.pushNotifToken)\n          });\n          \n          //after adding video to the database, send a push notification to the specific user\n          this.sendPushNotification(this.state.pushNotifToken); \n          \n        }\n        catch(err){\n          alert(err);\n        }\n    }\n\n      sendPushNotification =  async (pushNotifToken) => {\n\n        try{\n          await fetch('https://exp.host/--/api/v2/push/send',{\n            mode: 'no-cors',\n            method: \"POST\",\n            headers: {\n              host: \"exp.host\",\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                to: pushNotifToken, \n                sound: 'default', \n                title: 'Furu', //change title of notification here\n                body: 'Your video is ready!' //change body of notification here\n            })\n        }) \n        }\n        catch(err) {\n          alert(err)\n        }\n        \n        alert('Sent') //alerts a sent as of right now, can style it in the future\n      \n    };\n    onEmailChange(e) {\n      this.setState({\n        email: e.target.value\n      });\n    }\n    onLinkChange(e) {\n      this.setState({\n        link: e.target.value\n      });\n    }\n    onCaptionChange(e) {\n      this.setState({\n        caption: e.target.value\n      });\n    }\n\n\n  render() {\n\n    return (\n    \n      <div className=\"container mt-5\">\n          <form onSubmit={(e) => this.addVideo(e)}>\n            <div className=\"form-group\">\n              <label for=\"exampleInputEmail1\">Email</label>\n              <input onChange={(e) => this.onEmailChange(e)} value={this.state.email} type=\"email\" className=\"form-control mb-3\" placeholder=\"Enter email\" />\n            </div>\n            <div className=\"form-group\">\n              <label for=\"exampleInputPassword1\">Video Link</label>\n              <input onChange={(e) => this.onLinkChange(e)} value={this.state.link} type=\"text\" className=\"form-control mb-3\" placeholder=\"Enter video URL\" />\n            </div>\n            <div className=\"form-group\">\n              <label for=\"exampleInputPassword1\">Caption</label>\n              <input onChange={(e) => this.onCaptionChange(e)} value={this.state.caption} type=\"text\" className=\"form-control\" placeholder=\"Enter caption\" />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit</button>\n          \n          </form>\n      </div>\n       \n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}